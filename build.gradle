apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'org.oneframework.runner.TestRunner'

group 'OneFramework'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 11

repositories {
    mavenCentral()
}



dependencies {
    implementation group: 'io.appium', name: 'java-client', version: '7.1.0'
    // https://mvnrepository.com/artifact/org.testng/testng
    compileOnly group: 'org.testng', name: 'testng', version: '7.1.0'

    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '3.3.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation 'ru.yandex.qatools.ashot:ashot:1.5.2'
    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.8.1'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.0'
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.12'
    testImplementation 'com.epam.reportportal:agent-java-testng:5.3.1'
    testImplementation 'com.epam.reportportal:logger-java-log4j:5.1.8'

}

compileJava {options.encoding = "UTF-8"}



test{ // we define a task with name ‘smokeTests’
    print 'Running the tests'
    def platformType = System.getenv("platformType")
    def platformName = System.getenv("platformName")
    testLogging.showStandardStreams = true

    useTestNG() {
        suites "${System.getProperty('suiteXmlFile', 'src/test/resources/testng.xml')}"
    }

    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

